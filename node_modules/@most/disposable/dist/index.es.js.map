{"version":3,"file":"index.es.js","sources":["../src/dispose.js","../src/disposeNone.js","../src/disposeOnce.js","../src/disposeWith.js","../src/disposeAll.js","../src/tryDispose.js","../src/index.js"],"sourcesContent":["/** @license MIT License (c) copyright 2010-2017 original author or authors */\n\nexport const dispose = disposable =>\n  disposable.dispose()\n","/** @license MIT License (c) copyright 2010-2017 original author or authors */\n\nexport const disposeNone = () => NONE\nconst NONE = new (class DisposeNone {\n  dispose () {}\n})()\n","/** @license MIT License (c) copyright 2010-2017 original author or authors */\n\n// Wrap an existing disposable (which may not already have been once()d)\n// so that it will only dispose its underlying resource at most once.\nexport const disposeOnce = disposable =>\n  new DisposeOnce(disposable)\n\nclass DisposeOnce {\n  constructor (disposable) {\n    this.disposed = false\n    this.disposable = disposable\n  }\n\n  dispose () {\n    if (!this.disposed) {\n      this.disposed = true\n      this.disposable.dispose()\n      this.disposable = undefined\n    }\n  }\n}\n","/** @license MIT License (c) copyright 2010-2017 original author or authors */\nimport { disposeOnce } from './disposeOnce'\nimport { curry2 } from '@most/prelude'\n\n// Create a Disposable that will use the provided\n// dispose function to dispose the resource\nexport const disposeWith = curry2((dispose, resource) =>\n  disposeOnce(new DisposeWith(dispose, resource)))\n\n// Disposable represents a resource that must be\n// disposed/released. It aggregates a function to dispose\n// the resource and a handle to a key/id/handle/reference\n// that identifies the resource\nclass DisposeWith {\n  constructor (dispose, resource) {\n    this._dispose = dispose\n    this._resource = resource\n  }\n\n  dispose () {\n    this._dispose(this._resource)\n  }\n}\n","/** @license MIT License (c) copyright 2010-2017 original author or authors */\nimport { reduce, curry2 } from '@most/prelude'\n\n// Aggregate a list of disposables into a DisposeAll\nexport const disposeAll = ds =>\n  new DisposeAll(ds)\n\n// Convenience to aggregate 2 disposables\nexport const disposeBoth = curry2((d1, d2) =>\n  disposeAll([d1, d2]))\n\nclass DisposeAll {\n  constructor (disposables) {\n    this.disposables = disposables\n  }\n\n  dispose () {\n    throwIfErrors(disposeCollectErrors(this.disposables))\n  }\n}\n\n// Dispose all, safely collecting errors into an array\nconst disposeCollectErrors = disposables =>\n  reduce(appendIfError, [], disposables)\n\n// Call dispose and if throws, append thrown error to errors\nconst appendIfError = (errors, d) => {\n  try {\n    d.dispose()\n  } catch (e) {\n    errors.push(e)\n  }\n  return errors\n}\n\n// Throw DisposeAllError if errors is non-empty\nconst throwIfErrors = errors => {\n  if (errors.length > 0) {\n    throw new DisposeAllError(`${errors.length} errors`, errors)\n  }\n}\n\n// Aggregate Error type for DisposeAll\nexport class DisposeAllError extends Error {\n  constructor (message, errors) {\n    super(message)\n    this.message = message\n    this.name = this.constructor.name\n    this.errors = errors\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, this.constructor)\n    }\n\n    this.stack = `${this.stack}${formatErrorStacks(this.errors)}`\n  }\n\n  toString () {\n    return this.stack\n  }\n}\n\nconst formatErrorStacks = errors =>\n  reduce(formatErrorStack, '', errors)\n\nconst formatErrorStack = (s, e, i) =>\n  s + `\\n[${(i + 1)}] ${e.stack}`\n","/** @license MIT License (c) copyright 2010-2017 original author or authors */\nimport { curry3 } from '@most/prelude'\n\n// Try to dispose the disposable.  If it throws, send\n// the error to sink.error with the provided Time value\nexport const tryDispose = curry3((t, disposable, sink) => {\n  try {\n    disposable.dispose()\n  } catch (e) {\n    sink.error(t, e)\n  }\n})\n","/** @license MIT License (c) copyright 2010-2017 original author or authors */\n\nexport * from './dispose'\nexport * from './disposeNone'\nexport * from './disposeWith'\nexport * from './disposeOnce'\nexport * from './disposeAll'\nexport * from './tryDispose'\n"],"names":["const","super"],"mappings":"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"}